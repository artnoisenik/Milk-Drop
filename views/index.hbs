<script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.16.0/mapbox-gl.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.16.0/mapbox-gl.css' rel='stylesheet' />

<div class="row secondary_nav">
  <div class="col-md-offset-1 col-md-2">
    <form id="enterALocation" onsubmit="geocodeThis()">
      <div class="form-group">
        <input type="text" id='search' class="form-control" placeholder="Enter a location...">
      </div>
    </form>
  </div>
  <div class="col-md-offset-6 col-md-2 text-right">
    <div class="form-group">
      <a href="/users/posting">
        <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-plus" aria-hidden="true"></span> Add Posting</button>
      </a>
    </div>
  </div>
</div>

<div class="row map">
  <div class="col-md-12">
    <div id="map" class=""></div>
  </div>
</div>


{{#each listings}}
  <div class="row postings">
    <div class="col-md-offset-1 col-md-10">
      <div class="row">
        <div class="col-md-2 text-center">
          <img src="{{portrait_link}}" alt="{{title}}" />
          <div class="ratings {{rating}}"></div>
        </div>
        <div class="col-md-7">
          <span class="glyphicon glyphicon-star verified {{verified}}" aria-hidden="true"></span>
          <a href='/posting/{{id}}'><h3>{{title}}</h3></a>
          <p>{{description}}</p>
        </div>
        <div class="col-md-3">
          <p>City: {{city}}</p>
          <p>Amount: {{amount}}oz</p>
          <p>Cost: ${{cost_per_ounce}}</p>
          <p>Date: {{created_at}}</p>
          <form action="/users/request" method="post">
            <div class="form-group">
              <button type="submit" class="btn btn-primary">Request {{requested}}</button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
{{/each}}

<script src='https://api.tiles.mapbox.com/mapbox.js/v2.2.4/mapbox.js'></script>
<link href='https://api.tiles.mapbox.com/mapbox.js/v2.2.4/mapbox.css' rel='stylesheet' />

<script>
  L.mapbox.accessToken = 'pk.eyJ1IjoiY2hlaW5yaWNocyIsImEiOiJjaW13bGQ3dW0wMzcxdW5tNDY4enhjNXp0In0.Yp48WNc-1xlHBLX9PcA5oQ';
  var map = L.mapbox.map('map', 'mapbox.streets');

  var geocoder = L.mapbox.geocoder('mapbox.places');

  var listingArray = {{{listingMapMarkers}}};

  var locations = L.mapbox.featureLayer().addTo(map);

  $('#enterALocation').on('submit', function(e){
    e.preventDefault();
  });

  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(success);
  } else {
    console.log("Geolocation is not supported by this browser.");
  }

  function success(pos) {
    var crd = pos.coords;

    map.setView([crd.latitude, crd.longitude], 10);

    var geojson = [];
    for (var i = 0; i < listingArray.length; i++) {
      var title = listingArray[i].title;
      var description = listingArray[i].description;
      var newlat = listingArray[i].latitude;
      var newlong = listingArray[i].longitude;
      var newJson = {
        "type": "Feature",
        "geometry": {
          "type": "Point",
          "coordinates": [newlong, newlat]
        },
        "properties": {
          "title": title,
          "description": description,
          "marker-color": "#63b6e5",
          "marker-size": "medium",
          "marker-symbol": "water"
        }
      };
      geojson.push(newJson);
    }
    console.log(geojson);

    locations.setGeoJSON(geojson);
  }//end success

  function showMap(err, data) {
      if (data.lbounds) {
          map.fitBounds(data.lbounds);
      } else if (data.latlng) {
          map.setView([data.latlng[0], data.latlng[1]], 15);
      }
  }

  function geocodeThis() {
    var text = document.getElementById('search').value;
    if (text.length >= 5) {
        geocoder.query(text, showMap);
    }
    console.log(text);
  }
</script>
